definitions:
  models.ChangePasswordInput:
    properties:
      new_password:
        type: string
      old_password:
        type: string
    type: object
  models.CreateUser:
    properties:
      email:
        type: string
      name:
        type: string
      parent_id:
        type: integer
      password:
        type: string
      phone:
        type: string
    type: object
  models.Login:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  models.Logout:
    properties:
      token:
        type: string
    type: object
  models.RecoveryPasswordInput:
    properties:
      otp:
        type: string
      password:
        type: string
    type: object
  models.RefreshAccessTokenRequest:
    properties:
      refresh_token:
        type: string
    type: object
  models.SendRecoveryPasswordInput:
    properties:
      email:
        type: string
    type: object
  models.SendVerifyEmail:
    properties:
      email:
        type: string
    type: object
  models.VerifyEmailInput:
    properties:
      otp:
        type: string
      password:
        type: string
    type: object
info:
  contact: {}
paths:
  /user/:
    post:
      consumes:
      - application/json
      description: This endpoint is implemented to register new user by Einsatzleiter
        and get a new token pair
      parameters:
      - description: User registration model
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.CreateUser'
      produces:
      - application/json
      responses:
        "201":
          description: User has been created
        "400":
          description: Bad request (e.g. parameter in body is not given or incorrect)
        "401":
          description: Permission to create the user is not given
      summary: Create a new user (branch) in the system
      tags:
      - Admin
  /user/email_verification:
    post:
      consumes:
      - application/json
      parameters:
      - description: 'Bearer '
        in: header
        name: Authorization
        required: true
        type: string
      - description: send verify email model
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.SendVerifyEmail'
      produces:
      - application/json
      responses:
        "200":
          description: OTP
        "400":
          description: Bad request
        "401":
          description: Token is not valid
        "500":
          description: Something went wrong
      tags:
      - Admin
  /users/activation:
    post:
      consumes:
      - application/json
      parameters:
      - description: 'Bearer '
        in: header
        name: Authorization
        required: true
        type: string
      - description: User login model
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.VerifyEmailInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
        "401":
          description: Token is not valid
        "500":
          description: Something went wrong
      tags:
      - Authentication
  /users/change_password:
    patch:
      consumes:
      - application/json
      description: This endpoint enables to set new password for the user
      parameters:
      - description: 'Bearer '
        in: header
        name: Authorization
        required: true
        type: string
      - description: User change password model
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.ChangePasswordInput'
      produces:
      - application/json
      responses:
        "200":
          description: Success message
        "400":
          description: Bad request (e.g. validation error) OR wrong password given
        "401":
          description: Token is not valid
        "500":
          description: Something unexpected went wrong
      summary: Change password of an authenticated user
      tags:
      - Authentication
  /users/forgot_password:
    post:
      consumes:
      - application/json
      description: This endpoint enables to reset the forgotten password
      parameters:
      - description: 'Bearer '
        in: header
        name: Authorization
        required: true
        type: string
      - description: User forgot password model
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.SendRecoveryPasswordInput'
      produces:
      - application/json
      responses:
        "200":
          description: OTP object
        "400":
          description: Bad request (e.g. parameter in body is not given or incorrect)
        "401":
          description: Token is not valid or missing
        "500":
          description: Something went wrong
      summary: Reset forgotten password of user
      tags:
      - Authentication
  /users/login:
    post:
      consumes:
      - application/json
      description: This endpoint enables to login into the system and returns new
        token pair
      parameters:
      - description: User login model
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.Login'
      produces:
      - application/json
      responses:
        "200":
          description: Login successful
        "400":
          description: Bad request (e.g. parameter in body is not given or incorrect)
        "401":
          description: User deactivated
        "404":
          description: User not found in the system
      summary: Login into the system
      tags:
      - Authentication
  /users/logout:
    post:
      consumes:
      - application/json
      description: Logout an authenticated user
      parameters:
      - description: 'Bearer '
        in: header
        name: Authorization
        required: true
        type: string
      - description: Logout
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.Logout'
      responses:
        "204":
          description: Logged out successfully
        "400":
          description: Bad request (e.g. refresh in body is not given)
        "401":
          description: Access token is missing
      summary: Logout an authenticated user
      tags:
      - Authentication
  /users/recovery_password:
    post:
      consumes:
      - application/json
      description: This endpoint enables to set new password after resetting
      parameters:
      - description: 'Bearer '
        in: header
        name: Authorization
        required: true
        type: string
      - description: User recovery password model
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.RecoveryPasswordInput'
      produces:
      - application/json
      responses:
        "200":
          description: Success message
        "400":
          description: Bad request (e.g. parameter in body is not given or incorrect)
        "401":
          description: Token is not valid
        "500":
          description: Something went wrong
      summary: Set new password after reset
      tags:
      - Authentication
  /users/refresh:
    post:
      consumes:
      - application/json
      description: This endpoint enables to refresh timed-out access token
      parameters:
      - description: 'Bearer '
        in: header
        name: Authorization
        required: true
        type: string
      - description: User login model
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.RefreshAccessTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: New access token
        "400":
          description: Bad request (e.g. parameter in body is not given or incorrect)
        "401":
          description: Token is not valid
        "500":
          description: Something went wrong
      summary: Refresh access JWT token
      tags:
      - Authentication
swagger: "2.0"
