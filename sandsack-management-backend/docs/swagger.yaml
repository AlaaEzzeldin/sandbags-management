definitions:
  models.ChangePasswordInput:
    properties:
      new_password:
        type: string
      old_password:
        type: string
    type: object
  models.Comment:
    properties:
      comment_text:
        type: string
      create_date:
        type: string
      id:
        type: integer
      order_id:
        type: integer
      update_date:
        type: string
    type: object
  models.CommentInput:
    properties:
      comments:
        items:
          type: string
        type: array
      order_id:
        type: integer
    type: object
  models.CreateOrderInput:
    properties:
      address_to:
        type: string
      comments:
        items:
          $ref: '#/definitions/models.Comment'
        type: array
      equipments:
        items:
          $ref: '#/definitions/models.OrderEquipment'
        type: array
      priority:
        type: integer
    type: object
  models.CreateUser:
    properties:
      email:
        type: string
      name:
        type: string
      parent_id:
        type: integer
      password:
        type: string
      phone:
        type: string
    type: object
  models.ErrorResponse:
    properties:
      err_code:
        type: integer
      err_message:
        type: string
    type: object
  models.Log:
    properties:
      action_type_id:
        type: integer
      action_type_name:
        type: string
      create_date:
        type: string
      description:
        type: string
      id:
        type: integer
      order_id:
        type: integer
      update_date:
        type: string
      updated_by:
        type: integer
      updated_by_name:
        type: string
    type: object
  models.Login:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  models.Logout:
    properties:
      token:
        type: string
    type: object
  models.Order:
    properties:
      address_from:
        type: string
      address_to:
        type: string
      assigned_to:
        type: integer
      comments:
        items:
          $ref: '#/definitions/models.Comment'
        type: array
      create_date:
        type: string
      equipments:
        items:
          $ref: '#/definitions/models.OrderEquipment'
        type: array
      id:
        type: integer
      logs:
        items:
          $ref: '#/definitions/models.Log'
        type: array
      name:
        type: string
      permissions:
        items:
          $ref: '#/definitions/models.Permission'
        type: array
      priority_id:
        type: integer
      status_id:
        type: integer
      status_name:
        type: string
      update_date:
        type: string
      user_id:
        type: integer
    type: object
  models.OrderEquipment:
    properties:
      id:
        type: integer
      name:
        type: string
      quantity:
        type: integer
    type: object
  models.PatchProfileInput:
    properties:
      name:
        type: string
      phone:
        type: string
    type: object
  models.Permission:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  models.RecoveryPasswordInput:
    properties:
      otp:
        type: string
      password:
        type: string
    type: object
  models.RefreshAccessTokenRequest:
    properties:
      refresh_token:
        type: string
    type: object
  models.SendRecoveryPasswordInput:
    properties:
      email:
        type: string
    type: object
  models.SendVerifyEmail:
    properties:
      email:
        type: string
    type: object
  models.Tokens:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
      role:
        type: string
    type: object
  models.User:
    properties:
      branch_id:
        type: integer
      branch_name:
        type: string
      create_date:
        type: string
      email:
        type: string
      id:
        type: integer
      is_activated:
        type: boolean
      is_email_verified:
        type: boolean
      is_super_user:
        type: boolean
      name:
        type: string
      parent_id:
        type: integer
      parent_name:
        type: string
      password:
        type: string
      phone:
        type: string
      token:
        type: string
      update_date:
        type: string
    type: object
  models.VerifyEmailInput:
    properties:
      otp:
        type: string
      password:
        type: string
    type: object
info:
  contact: {}
paths:
  /email_verification:
    post:
      consumes:
      - application/json
      description: SendVerifyEmail - admin sends email to user for him to verify
      parameters:
      - description: 'Bearer '
        in: header
        name: Authorization
        required: true
        type: string
      - description: SendVerifyEmail
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.SendVerifyEmail'
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: SendVerifyEmail - admin sends email to user for him to verify
      tags:
      - Admin
  /order/:
    get:
      consumes:
      - application/json
      description: ListOrder - user can decline order
      parameters:
      - description: 'Bearer '
        in: header
        name: Authorization
        required: true
        type: string
      - description: Id of the order
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Order'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: ListOrder - user can decline order
      tags:
      - Order
    post:
      consumes:
      - application/json
      description: CreateOrder - Unterabschnitt creates the order
      parameters:
      - description: 'Bearer '
        in: header
        name: Authorization
        required: true
        type: string
      - description: CreateOrder
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.CreateOrderInput'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Order'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: CreateOrder - Unterabschnitt creates the order
      tags:
      - Order
  /order/accept:
    post:
      consumes:
      - application/json
      description: AcceptOrder - user can accept order
      parameters:
      - description: 'Bearer '
        in: header
        name: Authorization
        required: true
        type: string
      - description: Id of the order
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: AcceptOrder - user can accept order
      tags:
      - Order
  /order/cancel:
    post:
      consumes:
      - application/json
      description: DeclineOrder - user can decline order
      parameters:
      - description: 'Bearer '
        in: header
        name: Authorization
        required: true
        type: string
      - description: Id of the order
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: DeclineOrder - user can decline order
      tags:
      - Order
  /order/comment:
    post:
      consumes:
      - application/json
      description: CommentOrder - user can write comments for the order
      parameters:
      - description: 'Bearer '
        in: header
        name: Authorization
        required: true
        type: string
      - description: Comment input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.CommentInput'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: CommentOrder - user can write comments for the order
      tags:
      - Order
  /order/equipment:
    get:
      consumes:
      - application/json
      description: GetEquipment - array of equipment and current quantity of it in
        Mollnhof
      parameters:
      - description: 'Bearer '
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.OrderEquipment'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: GetEquipment - array of equipment and current quantity of it in Mollnhof
      tags:
      - Order
  /user/:
    post:
      consumes:
      - application/json
      description: This endpoint is implemented to register new user by Einsatzleiter
        and get a new token pair
      parameters:
      - description: 'Bearer '
        in: header
        name: Authorization
        required: true
        type: string
      - description: User registration model
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.CreateUser'
      produces:
      - application/json
      responses:
        "201":
          description: User has been created
        "400":
          description: Bad request (e.g. parameter in body is not given or incorrect)
        "401":
          description: Permission to create the user is not given
      summary: Create a new user (branch) in the system
      tags:
      - Admin
  /users/:
    get:
      consumes:
      - application/json
      description: GetUserList - get list of all users
      parameters:
      - description: 'Bearer '
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: GetUserList - get list of all users
      tags:
      - Authentication
  /users/activation:
    post:
      consumes:
      - application/json
      description: VerifyEmail - when user got email with otp to verify email, it
        has to input this otp to verify email and set new password
      parameters:
      - description: 'Bearer '
        in: header
        name: Authorization
        required: true
        type: string
      - description: VerifyEmail
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.VerifyEmailInput'
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: VerifyEmail - when user got email with otp to verify email, it has
        to input this otp to verify email and set new password
      tags:
      - Authentication
  /users/change_password:
    patch:
      consumes:
      - application/json
      description: This endpoint enables to set new password for the user
      parameters:
      - description: 'Bearer '
        in: header
        name: Authorization
        required: true
        type: string
      - description: User change password model
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.ChangePasswordInput'
      produces:
      - application/json
      responses:
        "200":
          description: Success message
        "400":
          description: Bad request (e.g. validation error) OR wrong password given
        "401":
          description: Token is not valid
        "500":
          description: Something unexpected went wrong
      summary: Change password of an authenticated user
      tags:
      - Authentication
  /users/forgot_password:
    post:
      consumes:
      - application/json
      description: SendRecoveryPassword - user requests to reset password, when he
        forgets his password in order to login
      parameters:
      - description: 'Bearer '
        in: header
        name: Authorization
        required: true
        type: string
      - description: SendRecoveryPassword
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.SendRecoveryPasswordInput'
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: SendRecoveryPassword - user requests to reset password, when he forgets
        his password in order to login
      tags:
      - Authentication
  /users/login:
    post:
      consumes:
      - application/json
      description: Login - user inputs auth credentials and gets tokens
      parameters:
      - description: Login
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.Login'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Tokens'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Login - user inputs auth credentials and gets tokens
      tags:
      - Authentication
  /users/logout:
    post:
      consumes:
      - application/json
      description: Logout an authenticated user
      parameters:
      - description: 'Bearer '
        in: header
        name: Authorization
        required: true
        type: string
      - description: Logout
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.Logout'
      responses:
        "204":
          description: Logged out successfully
        "400":
          description: Bad request (e.g. refresh in body is not given)
        "401":
          description: Access token is missing
      summary: Logout an authenticated user
      tags:
      - Authentication
  /users/me:
    patch:
      consumes:
      - application/json
      description: This endpoint enables to change some user profile information
      parameters:
      - description: 'Bearer '
        in: header
        name: Authorization
        required: true
        type: string
      - description: User profile change model
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.PatchProfileInput'
      produces:
      - application/json
      responses:
        "200":
          description: Success message
        "400":
          description: Bad request (e.g. validation error) OR wrong password given
        "401":
          description: Token is not valid
        "500":
          description: Something unexpected went wrong
      summary: Change profile information
      tags:
      - Authentication
  /users/recovery_password:
    post:
      consumes:
      - application/json
      description: RecoveryPassword - when user got OTP per email, he needs to input
        new password and otp to set password
      parameters:
      - description: RecoveryPassword
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.RecoveryPasswordInput'
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: RecoveryPassword - when user got OTP per email, he needs to input new
        password and otp to set password
      tags:
      - Authentication
  /users/refresh:
    post:
      consumes:
      - application/json
      description: RefreshAccessToken - refreshes access token
      parameters:
      - description: RefreshAccessToken
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.RefreshAccessTokenRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Tokens'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: RefreshAccessToken - refreshes access token
      tags:
      - Authentication
swagger: "2.0"
